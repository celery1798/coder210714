io/std:
fopen.c  ->  fopen()   perror()  strerror()    
  --测试:一个进程中最多可以打开的文件个数
mycpy_fgetc.c  ->  模仿cp命令,由终端输入待操作的两个文件,实现以单个字符为单位进行文件拷贝.

fgets.c  ->  fgets()
mycpy_fgets.c -> 同上,以字符串(以行)为单位进行拷贝
mycpy_fread.c -> 同上,以单字节单位拷贝
fseek.c -> 文件位置指针 
getline.c  -> 以行为单位读取给定文件,并输出文件中每行的字符个数      getline()  ->  大作业:mygetline()
fflush.c  ->  缓冲区的作用及分类


io/sys:
mycpy.c  ->   sysio  cp 
dup.c    ->   文件描述符的复制   (原子操作)
ab.c     ->  加深缓冲区的理解,强调在同一个程序中对同一个文件尽量不要混用sysio和stdio    fileno()   fdopen()  
--------------
4,6,7
flen.c  ->  文件长度 面试:请用3种不同的方法获取文件长度
bigfile.c ->  做一个5G大的文件
ftype.c  ->  文件类型
dir.c   ->   读目录 
glob.c  ->   match a patten
glob1.c  ->   flag
mydu.c   ->  glob 递归 

-------------
6
username.c   ->    从命令行上输入用户ID,输出用户名
chkpass.c  ->    口令较验
100days.c  ->   打印当前的日期,和100天后的日期 
time.c  ->   时间日志,只要程序在运行,就一秒一条记录的输入到指定文件,如果程序被终止,则写入操作不再继续,当程序再次被激活,输入记录延用之前的序号

------------------
7
7.3  5+3 退出方式
atexit.c	 ->  exit();
mydate.c	 ->  getopt();  -y 4/2 -m -d -H 12/24 -M -S   非选项的arg的识别,如终端上指定了文件,则输出写文件,若没指定,则写终端
myenv.c      -> 打印环境变量 
jmp.c		 -> setjmp() longjmp()  长跳转/长返回  跨函数跳转  重构数据结构代码:平衡二叉树,递归查找,一旦找到/找不到,直接返回到递归点之前 









